//Дисциплина: Java.Уровень 1
//Домашнее задание №: 6 "Продвинутое ООП"
//Студент: Алексей Пирогов
//Дата: 18.04.2021

// дочерний класс по отношению к Animal
// для реализации механизма наследования используется ключевое слово extends
// для каждого создаваемого класса можно указать только один суперклассс - в Java не поддерживается множественное наследование
public class Cat extends Animal{

    protected static int counterCat;      //количество объектов дочернего класса Cat
    // подклас включает в себя все члены своего сперкласса Animal, поэтому объекты класса
    // будут иметь доступ к методам родительского класса

    static {    //зануление количества объектов
        counterCat = 0;
    }

    {   // установка статуса для экземпляра, а также инкремент счётчиков отвечающих за количество экземпляров
        this.typeAnimal = "cat";    // установка типа элемента
        counterAnimals++;           // инкремент счётчика животных
        counterCat++;               // инкрементк количества собак
    }

    // конструктор класса непараметризированный для создания диких котов и кошек
    public Cat(){
        this.maxDistanceRun = 300;  // пусть для диких котов максимальная дистанция для бега будет большей
    }

    // конструктор класса параметризированный для создания домашних животных
    public Cat(String name, boolean gender, String color, int ageMonths){
        this.pet = true;            // домашний
        this.name = name;           // установка клички
        this.gender = gender;       // пол
        this.color = color;         // окрас
        this.ageMonths = ageMonths; // установка возраста
        this.maxDistanceRun = 200;  // пусть домашние животные будут менее выносливые
    }

    // перегруженный метод voice в классе Cat
    // метод используемый для класса Cat по умолчанию
    final void voice(){
        System.out.print(name + " мяукнул" + correctPrint() + "!\n");
    }

    @Override   //переопределённый метод для плавания котов
    public final void swim(int distance){
        String gender = correctPrint();
        System.out.print(name + " увидел" + gender + " воду ... боится воды...\n");
    }

    // перегруженный метод deadAnimal класса Animal в классе Cat
    // метод используется для отражения смерти котов
    final void deadAnimal(){
        super.deadAnimal();     // обращение к методу супер класса
        counterCat--;             // декремент количества объектов класса
    }

    // метод класа Cat для получения количества объектов в классе
    protected static void getCountAnimals(){
        System.out.println("Количество объектов в классе \"Cat\": " + counterCat);
    }
}

